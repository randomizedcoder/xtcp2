# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: xtcp_flat_record/v1/xtcp_flat_record.proto
# Protobuf Python Version: 5.29.2
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    29,
    2,
    '',
    'xtcp_flat_record/v1/xtcp_flat_record.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from buf.validate import validate_pb2 as buf_dot_validate_dot_validate__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n*xtcp_flat_record/v1/xtcp_flat_record.proto\x12\x13xtcp_flat_record.v1\x1a\x1b\x62uf/validate/validate.proto\"\x14\n\x12\x46latRecordsRequest\"d\n\x13\x46latRecordsResponse\x12M\n\x10xtcp_flat_record\x18\x01 \x01(\x0b\x32#.xtcp_flat_record.v1.XtcpFlatRecordR\x0extcpFlatRecord\"\x18\n\x16PollFlatRecordsRequest\"A\n\x08\x45nvelope\x12\x35\n\x03row\x18\x01 \x03(\x0b\x32#.xtcp_flat_record.v1.XtcpFlatRecordR\x03row\"\x8f\x30\n\x0eXtcpFlatRecord\x12\x1c\n\x03sec\x18\x01 \x01(\x04\x42\n\xbaH\x07\x32\x02(\x00\xc8\x01\x01R\x03sec\x12\x1e\n\x04nsec\x18\x02 \x01(\x04\x42\n\xbaH\x07\x32\x02(\x00\xc8\x01\x01R\x04nsec\x12(\n\x08hostname\x18\x03 \x01(\tB\x0c\xbaH\tr\x04\x10\x01\x18\x64\xc8\x01\x01R\x08hostname\x12\"\n\x05netns\x18\x04 \x01(\tB\x0c\xbaH\tr\x04\x10\x01\x18\x64\xc8\x01\x01R\x05netns\x12\x12\n\x04nsid\x18\x05 \x01(\rR\x04nsid\x12 \n\x05label\x18\x06 \x01(\tB\n\xbaH\x07r\x02\x18(\xc8\x01\x00R\x05label\x12\x1c\n\x03tag\x18\x07 \x01(\tB\n\xbaH\x07r\x02\x18(\xc8\x01\x00R\x03tag\x12.\n\x0erecord_counter\x18\x08 \x01(\x04\x42\x07\xbaH\x04\x32\x02(\x00R\rrecordCounter\x12$\n\tsocket_fd\x18\t \x01(\x04\x42\x07\xbaH\x04\x32\x02(\x03R\x08socketFd\x12,\n\x0cnetlinker_id\x18\n \x01(\x04\x42\t\xbaH\x06\x32\x04\x18\x64(\x00R\x0bnetlinkerId\x12/\n\x14inet_diag_msg_family\x18\x65 \x01(\rR\x11inetDiagMsgFamily\x12-\n\x13inet_diag_msg_state\x18\x66 \x01(\rR\x10inetDiagMsgState\x12-\n\x13inet_diag_msg_timer\x18g \x01(\rR\x10inetDiagMsgTimer\x12\x31\n\x15inet_diag_msg_retrans\x18h \x01(\rR\x12inetDiagMsgRetrans\x12\x45\n inet_diag_msg_socket_source_port\x18i \x01(\rR\x1binetDiagMsgSocketSourcePort\x12O\n%inet_diag_msg_socket_destination_port\x18j \x01(\rR inetDiagMsgSocketDestinationPort\x12<\n\x1binet_diag_msg_socket_source\x18k \x01(\x0cR\x17inetDiagMsgSocketSource\x12\x46\n inet_diag_msg_socket_destination\x18l \x01(\x0cR\x1cinetDiagMsgSocketDestination\x12\x42\n\x1einet_diag_msg_socket_interface\x18m \x01(\rR\x1ainetDiagMsgSocketInterface\x12<\n\x1binet_diag_msg_socket_cookie\x18n \x01(\x04R\x17inetDiagMsgSocketCookie\x12?\n\x1dinet_diag_msg_socket_dest_asn\x18o \x01(\x04R\x18inetDiagMsgSocketDestAsn\x12\x46\n!inet_diag_msg_socket_next_hop_asn\x18p \x01(\x04R\x1binetDiagMsgSocketNextHopAsn\x12\x31\n\x15inet_diag_msg_expires\x18q \x01(\rR\x12inetDiagMsgExpires\x12/\n\x14inet_diag_msg_rqueue\x18r \x01(\rR\x11inetDiagMsgRqueue\x12/\n\x14inet_diag_msg_wqueue\x18s \x01(\rR\x11inetDiagMsgWqueue\x12)\n\x11inet_diag_msg_uid\x18t \x01(\rR\x0einetDiagMsgUid\x12-\n\x13inet_diag_msg_inode\x18u \x01(\rR\x10inetDiagMsgInode\x12#\n\rmem_info_rmem\x18\xc9\x01 \x01(\rR\x0bmemInfoRmem\x12#\n\rmem_info_wmem\x18\xca\x01 \x01(\rR\x0bmemInfoWmem\x12#\n\rmem_info_fmem\x18\xcb\x01 \x01(\rR\x0bmemInfoFmem\x12#\n\rmem_info_tmem\x18\xcc\x01 \x01(\rR\x0bmemInfoTmem\x12%\n\x0etcp_info_state\x18\xad\x02 \x01(\rR\x0ctcpInfoState\x12*\n\x11tcp_info_ca_state\x18\xae\x02 \x01(\rR\x0etcpInfoCaState\x12\x31\n\x14tcp_info_retransmits\x18\xaf\x02 \x01(\rR\x12tcpInfoRetransmits\x12\'\n\x0ftcp_info_probes\x18\xb0\x02 \x01(\rR\rtcpInfoProbes\x12)\n\x10tcp_info_backoff\x18\xb1\x02 \x01(\rR\x0etcpInfoBackoff\x12)\n\x10tcp_info_options\x18\xb2\x02 \x01(\rR\x0etcpInfoOptions\x12.\n\x13tcp_info_send_scale\x18\xb3\x02 \x01(\rR\x10tcpInfoSendScale\x12,\n\x12tcp_info_rcv_scale\x18\xb4\x02 \x01(\rR\x0ftcpInfoRcvScale\x12J\n\"tcp_info_delivery_rate_app_limited\x18\xb5\x02 \x01(\rR\x1dtcpInfoDeliveryRateAppLimited\x12\x46\n tcp_info_fast_open_client_failed\x18\xb6\x02 \x01(\rR\x1btcpInfoFastOpenClientFailed\x12!\n\x0ctcp_info_rto\x18\xbb\x02 \x01(\rR\ntcpInfoRto\x12!\n\x0ctcp_info_ato\x18\xbc\x02 \x01(\rR\ntcpInfoAto\x12(\n\x10tcp_info_snd_mss\x18\xbd\x02 \x01(\rR\rtcpInfoSndMss\x12(\n\x10tcp_info_rcv_mss\x18\xbe\x02 \x01(\rR\rtcpInfoRcvMss\x12)\n\x10tcp_info_unacked\x18\xbf\x02 \x01(\rR\x0etcpInfoUnacked\x12\'\n\x0ftcp_info_sacked\x18\xc0\x02 \x01(\rR\rtcpInfoSacked\x12#\n\rtcp_info_lost\x18\xc1\x02 \x01(\rR\x0btcpInfoLost\x12)\n\x10tcp_info_retrans\x18\xc2\x02 \x01(\rR\x0etcpInfoRetrans\x12)\n\x10tcp_info_fackets\x18\xc3\x02 \x01(\rR\x0etcpInfoFackets\x12\x35\n\x17tcp_info_last_data_sent\x18\xc4\x02 \x01(\rR\x13tcpInfoLastDataSent\x12\x33\n\x16tcp_info_last_ack_sent\x18\xc5\x02 \x01(\rR\x12tcpInfoLastAckSent\x12\x35\n\x17tcp_info_last_data_recv\x18\xc6\x02 \x01(\rR\x13tcpInfoLastDataRecv\x12\x33\n\x16tcp_info_last_ack_recv\x18\xc7\x02 \x01(\rR\x12tcpInfoLastAckRecv\x12#\n\rtcp_info_pmtu\x18\xc8\x02 \x01(\rR\x0btcpInfoPmtu\x12\x32\n\x15tcp_info_rcv_ssthresh\x18\xc9\x02 \x01(\rR\x12tcpInfoRcvSsthresh\x12!\n\x0ctcp_info_rtt\x18\xca\x02 \x01(\rR\ntcpInfoRtt\x12(\n\x10tcp_info_rtt_var\x18\xcb\x02 \x01(\rR\rtcpInfoRttVar\x12\x32\n\x15tcp_info_snd_ssthresh\x18\xcc\x02 \x01(\rR\x12tcpInfoSndSsthresh\x12*\n\x11tcp_info_snd_cwnd\x18\xcd\x02 \x01(\rR\x0etcpInfoSndCwnd\x12(\n\x10tcp_info_adv_mss\x18\xce\x02 \x01(\rR\rtcpInfoAdvMss\x12/\n\x13tcp_info_reordering\x18\xcf\x02 \x01(\rR\x11tcpInfoReordering\x12(\n\x10tcp_info_rcv_rtt\x18\xd0\x02 \x01(\rR\rtcpInfoRcvRtt\x12,\n\x12tcp_info_rcv_space\x18\xd1\x02 \x01(\rR\x0ftcpInfoRcvSpace\x12\x34\n\x16tcp_info_total_retrans\x18\xd2\x02 \x01(\rR\x13tcpInfoTotalRetrans\x12\x30\n\x14tcp_info_pacing_rate\x18\xd3\x02 \x01(\x04R\x11tcpInfoPacingRate\x12\x37\n\x18tcp_info_max_pacing_rate\x18\xd4\x02 \x01(\x04R\x14tcpInfoMaxPacingRate\x12\x30\n\x14tcp_info_bytes_acked\x18\xd5\x02 \x01(\x04R\x11tcpInfoBytesAcked\x12\x36\n\x17tcp_info_bytes_received\x18\xd6\x02 \x01(\x04R\x14tcpInfoBytesReceived\x12*\n\x11tcp_info_segs_out\x18\xd7\x02 \x01(\rR\x0etcpInfoSegsOut\x12(\n\x10tcp_info_segs_in\x18\xd8\x02 \x01(\rR\rtcpInfoSegsIn\x12\x35\n\x17tcp_info_not_sent_bytes\x18\xd9\x02 \x01(\rR\x13tcpInfoNotSentBytes\x12(\n\x10tcp_info_min_rtt\x18\xda\x02 \x01(\rR\rtcpInfoMinRtt\x12\x31\n\x15tcp_info_data_segs_in\x18\xdb\x02 \x01(\rR\x11tcpInfoDataSegsIn\x12\x33\n\x16tcp_info_data_segs_out\x18\xdc\x02 \x01(\rR\x12tcpInfoDataSegsOut\x12\x34\n\x16tcp_info_delivery_rate\x18\xdd\x02 \x01(\x04R\x13tcpInfoDeliveryRate\x12,\n\x12tcp_info_busy_time\x18\xde\x02 \x01(\x04R\x0ftcpInfoBusyTime\x12\x32\n\x15tcp_info_rwnd_limited\x18\xdf\x02 \x01(\x04R\x12tcpInfoRwndLimited\x12\x36\n\x17tcp_info_sndbuf_limited\x18\xe0\x02 \x01(\x04R\x14tcpInfoSndbufLimited\x12-\n\x12tcp_info_delivered\x18\xe1\x02 \x01(\rR\x10tcpInfoDelivered\x12\x32\n\x15tcp_info_delivered_ce\x18\xe2\x02 \x01(\rR\x12tcpInfoDeliveredCe\x12.\n\x13tcp_info_bytes_sent\x18\xe3\x02 \x01(\x04R\x10tcpInfoBytesSent\x12\x34\n\x16tcp_info_bytes_retrans\x18\xe4\x02 \x01(\x04R\x13tcpInfoBytesRetrans\x12.\n\x13tcp_info_dsack_dups\x18\xe5\x02 \x01(\rR\x10tcpInfoDsackDups\x12.\n\x13tcp_info_reord_seen\x18\xe6\x02 \x01(\rR\x10tcpInfoReordSeen\x12\x30\n\x14tcp_info_rcv_ooopack\x18\xe7\x02 \x01(\rR\x11tcpInfoRcvOoopack\x12(\n\x10tcp_info_snd_wnd\x18\xe8\x02 \x01(\rR\rtcpInfoSndWnd\x12(\n\x10tcp_info_rcv_wnd\x18\xe9\x02 \x01(\rR\rtcpInfoRcvWnd\x12\'\n\x0ftcp_info_rehash\x18\xea\x02 \x01(\rR\rtcpInfoRehash\x12,\n\x12tcp_info_total_rto\x18\xeb\x02 \x01(\rR\x0ftcpInfoTotalRto\x12\x41\n\x1dtcp_info_total_rto_recoveries\x18\xec\x02 \x01(\rR\x19tcpInfoTotalRtoRecoveries\x12\x35\n\x17tcp_info_total_rto_time\x18\xed\x02 \x01(\rR\x13tcpInfoTotalRtoTime\x12?\n\x1b\x63ongestion_algorithm_string\x18\x90\x03 \x01(\tR\x19\x63ongestionAlgorithmString\x12t\n\x19\x63ongestion_algorithm_enum\x18\x91\x03 \x01(\x0e\x32\x37.xtcp_flat_record.v1.XtcpFlatRecord.CongestionAlgorithmR\x17\x63ongestionAlgorithmEnum\x12\'\n\x0ftype_of_service\x18\xf5\x03 \x01(\rR\rtypeOfService\x12$\n\rtraffic_class\x18\xf6\x03 \x01(\rR\x0ctrafficClass\x12\x33\n\x16sk_mem_info_rmem_alloc\x18\xd9\x04 \x01(\rR\x12skMemInfoRmemAlloc\x12-\n\x13sk_mem_info_rcv_buf\x18\xda\x04 \x01(\rR\x0fskMemInfoRcvBuf\x12\x33\n\x16sk_mem_info_wmem_alloc\x18\xdb\x04 \x01(\rR\x12skMemInfoWmemAlloc\x12-\n\x13sk_mem_info_snd_buf\x18\xdc\x04 \x01(\rR\x0fskMemInfoSndBuf\x12\x31\n\x15sk_mem_info_fwd_alloc\x18\xdd\x04 \x01(\rR\x11skMemInfoFwdAlloc\x12\x35\n\x17sk_mem_info_wmem_queued\x18\xde\x04 \x01(\rR\x13skMemInfoWmemQueued\x12,\n\x12sk_mem_info_optmem\x18\xdf\x04 \x01(\rR\x0fskMemInfoOptmem\x12.\n\x13sk_mem_info_backlog\x18\xe0\x04 \x01(\rR\x10skMemInfoBacklog\x12*\n\x11sk_mem_info_drops\x18\xe1\x04 \x01(\rR\x0eskMemInfoDrops\x12&\n\x0eshutdown_state\x18\xbc\x05 \x01(\rR\rshutdownState\x12-\n\x12vegas_info_enabled\x18\xa1\x06 \x01(\rR\x10vegasInfoEnabled\x12,\n\x12vegas_info_rtt_cnt\x18\xa2\x06 \x01(\rR\x0fvegasInfoRttCnt\x12%\n\x0evegas_info_rtt\x18\xa3\x06 \x01(\rR\x0cvegasInfoRtt\x12,\n\x12vegas_info_min_rtt\x18\xa4\x06 \x01(\rR\x0fvegasInfoMinRtt\x12-\n\x12\x64\x63tcp_info_enabled\x18\x85\x07 \x01(\rR\x10\x64\x63tcpInfoEnabled\x12.\n\x13\x64\x63tcp_info_ce_state\x18\x86\x07 \x01(\rR\x10\x64\x63tcpInfoCeState\x12)\n\x10\x64\x63tcp_info_alpha\x18\x87\x07 \x01(\rR\x0e\x64\x63tcpInfoAlpha\x12*\n\x11\x64\x63tcp_info_ab_ecn\x18\x88\x07 \x01(\rR\x0e\x64\x63tcpInfoAbEcn\x12*\n\x11\x64\x63tcp_info_ab_tot\x18\x89\x07 \x01(\rR\x0e\x64\x63tcpInfoAbTot\x12$\n\x0e\x62\x62r_info_bw_lo\x18\xe9\x07 \x01(\rR\x0b\x62\x62rInfoBwLo\x12$\n\x0e\x62\x62r_info_bw_hi\x18\xea\x07 \x01(\rR\x0b\x62\x62rInfoBwHi\x12(\n\x10\x62\x62r_info_min_rtt\x18\xeb\x07 \x01(\rR\rbbrInfoMinRtt\x12\x30\n\x14\x62\x62r_info_pacing_gain\x18\xec\x07 \x01(\rR\x11\x62\x62rInfoPacingGain\x12,\n\x12\x62\x62r_info_cwnd_gain\x18\xed\x07 \x01(\rR\x0f\x62\x62rInfoCwndGain\x12\x1a\n\x08\x63lass_id\x18\xcd\x08 \x01(\rR\x07\x63lassId\x12\x1a\n\x08sock_opt\x18\xce\x08 \x01(\rR\x07sockOpt\x12\x18\n\x07\x63_group\x18\xb3\t \x01(\x04R\x06\x63Group\"\x99\x02\n\x13\x43ongestionAlgorithm\x12$\n CONGESTION_ALGORITHM_UNSPECIFIED\x10\x00\x12\x1e\n\x1a\x43ONGESTION_ALGORITHM_CUBIC\x10\x01\x12\x1e\n\x1a\x43ONGESTION_ALGORITHM_DCTCP\x10\x02\x12\x1e\n\x1a\x43ONGESTION_ALGORITHM_VEGAS\x10\x03\x12\x1f\n\x1b\x43ONGESTION_ALGORITHM_PRAGUE\x10\x04\x12\x1d\n\x19\x43ONGESTION_ALGORITHM_BBR1\x10\x05\x12\x1d\n\x19\x43ONGESTION_ALGORITHM_BBR2\x10\x06\x12\x1d\n\x19\x43ONGESTION_ALGORITHM_BBR3\x10\x07\x32\xe9\x01\n\x15XTCPFlatRecordService\x12\x62\n\x0b\x46latRecords\x12\'.xtcp_flat_record.v1.FlatRecordsRequest\x1a(.xtcp_flat_record.v1.FlatRecordsResponse0\x01\x12l\n\x0fPollFlatRecords\x12+.xtcp_flat_record.v1.PollFlatRecordsRequest\x1a(.xtcp_flat_record.v1.FlatRecordsResponse(\x01\x30\x01\x42\xab\x01\n\x17\x63om.xtcp_flat_record.v1B\x13XtcpFlatRecordProtoP\x01Z\x16./pkg/xtcp_flat_record\xa2\x02\x03XXX\xaa\x02\x11XtcpFlatRecord.V1\xca\x02\x11XtcpFlatRecord\\V1\xe2\x02\x1dXtcpFlatRecord\\V1\\GPBMetadata\xea\x02\x12XtcpFlatRecord::V1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'xtcp_flat_record.v1.xtcp_flat_record_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n\027com.xtcp_flat_record.v1B\023XtcpFlatRecordProtoP\001Z\026./pkg/xtcp_flat_record\242\002\003XXX\252\002\021XtcpFlatRecord.V1\312\002\021XtcpFlatRecord\\V1\342\002\035XtcpFlatRecord\\V1\\GPBMetadata\352\002\022XtcpFlatRecord::V1'
  _globals['_XTCPFLATRECORD'].fields_by_name['sec']._loaded_options = None
  _globals['_XTCPFLATRECORD'].fields_by_name['sec']._serialized_options = b'\272H\0072\002(\000\310\001\001'
  _globals['_XTCPFLATRECORD'].fields_by_name['nsec']._loaded_options = None
  _globals['_XTCPFLATRECORD'].fields_by_name['nsec']._serialized_options = b'\272H\0072\002(\000\310\001\001'
  _globals['_XTCPFLATRECORD'].fields_by_name['hostname']._loaded_options = None
  _globals['_XTCPFLATRECORD'].fields_by_name['hostname']._serialized_options = b'\272H\tr\004\020\001\030d\310\001\001'
  _globals['_XTCPFLATRECORD'].fields_by_name['netns']._loaded_options = None
  _globals['_XTCPFLATRECORD'].fields_by_name['netns']._serialized_options = b'\272H\tr\004\020\001\030d\310\001\001'
  _globals['_XTCPFLATRECORD'].fields_by_name['label']._loaded_options = None
  _globals['_XTCPFLATRECORD'].fields_by_name['label']._serialized_options = b'\272H\007r\002\030(\310\001\000'
  _globals['_XTCPFLATRECORD'].fields_by_name['tag']._loaded_options = None
  _globals['_XTCPFLATRECORD'].fields_by_name['tag']._serialized_options = b'\272H\007r\002\030(\310\001\000'
  _globals['_XTCPFLATRECORD'].fields_by_name['record_counter']._loaded_options = None
  _globals['_XTCPFLATRECORD'].fields_by_name['record_counter']._serialized_options = b'\272H\0042\002(\000'
  _globals['_XTCPFLATRECORD'].fields_by_name['socket_fd']._loaded_options = None
  _globals['_XTCPFLATRECORD'].fields_by_name['socket_fd']._serialized_options = b'\272H\0042\002(\003'
  _globals['_XTCPFLATRECORD'].fields_by_name['netlinker_id']._loaded_options = None
  _globals['_XTCPFLATRECORD'].fields_by_name['netlinker_id']._serialized_options = b'\272H\0062\004\030d(\000'
  _globals['_FLATRECORDSREQUEST']._serialized_start=96
  _globals['_FLATRECORDSREQUEST']._serialized_end=116
  _globals['_FLATRECORDSRESPONSE']._serialized_start=118
  _globals['_FLATRECORDSRESPONSE']._serialized_end=218
  _globals['_POLLFLATRECORDSREQUEST']._serialized_start=220
  _globals['_POLLFLATRECORDSREQUEST']._serialized_end=244
  _globals['_ENVELOPE']._serialized_start=246
  _globals['_ENVELOPE']._serialized_end=311
  _globals['_XTCPFLATRECORD']._serialized_start=314
  _globals['_XTCPFLATRECORD']._serialized_end=6473
  _globals['_XTCPFLATRECORD_CONGESTIONALGORITHM']._serialized_start=6192
  _globals['_XTCPFLATRECORD_CONGESTIONALGORITHM']._serialized_end=6473
  _globals['_XTCPFLATRECORDSERVICE']._serialized_start=6476
  _globals['_XTCPFLATRECORDSERVICE']._serialized_end=6709
# @@protoc_insertion_point(module_scope)
