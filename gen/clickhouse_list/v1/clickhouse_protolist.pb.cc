// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: clickhouse_list/v1/clickhouse_protolist.proto
// Protobuf C++ Version: 5.29.3

#include "clickhouse_list/v1/clickhouse_protolist.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace clickhouse_protolist {
namespace v1 {

inline constexpr Record::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : my_uint32_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Record::Record(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RecordDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RecordDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RecordDefaultTypeInternal() {}
  union {
    Record _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RecordDefaultTypeInternal _Record_default_instance_;

inline constexpr Envelope::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : row_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Envelope::Envelope(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EnvelopeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EnvelopeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EnvelopeDefaultTypeInternal() {}
  union {
    Envelope _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EnvelopeDefaultTypeInternal _Envelope_default_instance_;
}  // namespace v1
}  // namespace clickhouse_protolist
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_clickhouse_5flist_2fv1_2fclickhouse_5fprotolist_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_clickhouse_5flist_2fv1_2fclickhouse_5fprotolist_2eproto = nullptr;
const ::uint32_t
    TableStruct_clickhouse_5flist_2fv1_2fclickhouse_5fprotolist_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::clickhouse_protolist::v1::Record, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::clickhouse_protolist::v1::Record, _impl_.my_uint32_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::clickhouse_protolist::v1::Envelope, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::clickhouse_protolist::v1::Envelope, _impl_.row_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::clickhouse_protolist::v1::Record)},
        {9, -1, -1, sizeof(::clickhouse_protolist::v1::Envelope)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::clickhouse_protolist::v1::_Record_default_instance_._instance,
    &::clickhouse_protolist::v1::_Envelope_default_instance_._instance,
};
const char descriptor_table_protodef_clickhouse_5flist_2fv1_2fclickhouse_5fprotolist_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n-clickhouse_list/v1/clickhouse_protolis"
    "t.proto\022\027clickhouse_protolist.v1\"%\n\006Reco"
    "rd\022\033\n\tmy_uint32\030\001 \001(\rR\010myUint32\"=\n\010Envel"
    "ope\0221\n\003row\030\001 \003(\0132\037.clickhouse_protolist."
    "v1.RecordR\003rowB\314\001\n\033com.clickhouse_protol"
    "ist.v1B\030ClickhouseProtolistProtoP\001Z\032./pk"
    "g/clickhouse_protolist\242\002\003CXX\252\002\026Clickhous"
    "eProtolist.V1\312\002\026ClickhouseProtolist\\V1\342\002"
    "\"ClickhouseProtolist\\V1\\GPBMetadata\352\002\027Cl"
    "ickhouseProtolist::V1b\006proto3"
};
static ::absl::once_flag descriptor_table_clickhouse_5flist_2fv1_2fclickhouse_5fprotolist_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_clickhouse_5flist_2fv1_2fclickhouse_5fprotolist_2eproto = {
    false,
    false,
    389,
    descriptor_table_protodef_clickhouse_5flist_2fv1_2fclickhouse_5fprotolist_2eproto,
    "clickhouse_list/v1/clickhouse_protolist.proto",
    &descriptor_table_clickhouse_5flist_2fv1_2fclickhouse_5fprotolist_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_clickhouse_5flist_2fv1_2fclickhouse_5fprotolist_2eproto::offsets,
    file_level_enum_descriptors_clickhouse_5flist_2fv1_2fclickhouse_5fprotolist_2eproto,
    file_level_service_descriptors_clickhouse_5flist_2fv1_2fclickhouse_5fprotolist_2eproto,
};
namespace clickhouse_protolist {
namespace v1 {
// ===================================================================

class Record::_Internal {
 public:
};

Record::Record(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:clickhouse_protolist.v1.Record)
}
Record::Record(
    ::google::protobuf::Arena* arena, const Record& from)
    : Record(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Record::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Record::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.my_uint32_ = {};
}
Record::~Record() {
  // @@protoc_insertion_point(destructor:clickhouse_protolist.v1.Record)
  SharedDtor(*this);
}
inline void Record::SharedDtor(MessageLite& self) {
  Record& this_ = static_cast<Record&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Record::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Record(arena);
}
constexpr auto Record::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Record),
                                            alignof(Record));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Record::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Record_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Record::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Record>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Record::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Record>(), &Record::ByteSizeLong,
            &Record::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Record, _impl_._cached_size_),
        false,
    },
    &Record::kDescriptorMethods,
    &descriptor_table_clickhouse_5flist_2fv1_2fclickhouse_5fprotolist_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Record::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> Record::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::clickhouse_protolist::v1::Record>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 my_uint32 = 1 [json_name = "myUint32"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Record, _impl_.my_uint32_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Record, _impl_.my_uint32_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 my_uint32 = 1 [json_name = "myUint32"];
    {PROTOBUF_FIELD_OFFSET(Record, _impl_.my_uint32_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Record::Clear() {
// @@protoc_insertion_point(message_clear_start:clickhouse_protolist.v1.Record)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.my_uint32_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Record::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Record& this_ = static_cast<const Record&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Record::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Record& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:clickhouse_protolist.v1.Record)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 my_uint32 = 1 [json_name = "myUint32"];
          if (this_._internal_my_uint32() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_my_uint32(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:clickhouse_protolist.v1.Record)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Record::ByteSizeLong(const MessageLite& base) {
          const Record& this_ = static_cast<const Record&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Record::ByteSizeLong() const {
          const Record& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:clickhouse_protolist.v1.Record)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // uint32 my_uint32 = 1 [json_name = "myUint32"];
            if (this_._internal_my_uint32() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_my_uint32());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Record::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Record*>(&to_msg);
  auto& from = static_cast<const Record&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:clickhouse_protolist.v1.Record)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_my_uint32() != 0) {
    _this->_impl_.my_uint32_ = from._impl_.my_uint32_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Record::CopyFrom(const Record& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:clickhouse_protolist.v1.Record)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Record::InternalSwap(Record* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.my_uint32_, other->_impl_.my_uint32_);
}

::google::protobuf::Metadata Record::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Envelope::_Internal {
 public:
};

Envelope::Envelope(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:clickhouse_protolist.v1.Envelope)
}
inline PROTOBUF_NDEBUG_INLINE Envelope::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::clickhouse_protolist::v1::Envelope& from_msg)
      : row_{visibility, arena, from.row_},
        _cached_size_{0} {}

Envelope::Envelope(
    ::google::protobuf::Arena* arena,
    const Envelope& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Envelope* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:clickhouse_protolist.v1.Envelope)
}
inline PROTOBUF_NDEBUG_INLINE Envelope::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : row_{visibility, arena},
        _cached_size_{0} {}

inline void Envelope::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Envelope::~Envelope() {
  // @@protoc_insertion_point(destructor:clickhouse_protolist.v1.Envelope)
  SharedDtor(*this);
}
inline void Envelope::SharedDtor(MessageLite& self) {
  Envelope& this_ = static_cast<Envelope&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Envelope::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Envelope(arena);
}
constexpr auto Envelope::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Envelope, _impl_.row_) +
          decltype(Envelope::_impl_.row_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Envelope), alignof(Envelope), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Envelope::PlacementNew_,
                                 sizeof(Envelope),
                                 alignof(Envelope));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Envelope::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Envelope_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Envelope::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Envelope>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Envelope::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Envelope>(), &Envelope::ByteSizeLong,
            &Envelope::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Envelope, _impl_._cached_size_),
        false,
    },
    &Envelope::kDescriptorMethods,
    &descriptor_table_clickhouse_5flist_2fv1_2fclickhouse_5fprotolist_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Envelope::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Envelope::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::clickhouse_protolist::v1::Envelope>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .clickhouse_protolist.v1.Record row = 1 [json_name = "row"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Envelope, _impl_.row_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .clickhouse_protolist.v1.Record row = 1 [json_name = "row"];
    {PROTOBUF_FIELD_OFFSET(Envelope, _impl_.row_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::clickhouse_protolist::v1::Record>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Envelope::Clear() {
// @@protoc_insertion_point(message_clear_start:clickhouse_protolist.v1.Envelope)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.row_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Envelope::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Envelope& this_ = static_cast<const Envelope&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Envelope::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Envelope& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:clickhouse_protolist.v1.Envelope)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .clickhouse_protolist.v1.Record row = 1 [json_name = "row"];
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_row_size());
               i < n; i++) {
            const auto& repfield = this_._internal_row().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:clickhouse_protolist.v1.Envelope)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Envelope::ByteSizeLong(const MessageLite& base) {
          const Envelope& this_ = static_cast<const Envelope&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Envelope::ByteSizeLong() const {
          const Envelope& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:clickhouse_protolist.v1.Envelope)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .clickhouse_protolist.v1.Record row = 1 [json_name = "row"];
            {
              total_size += 1UL * this_._internal_row_size();
              for (const auto& msg : this_._internal_row()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Envelope::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Envelope*>(&to_msg);
  auto& from = static_cast<const Envelope&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:clickhouse_protolist.v1.Envelope)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_row()->MergeFrom(
      from._internal_row());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Envelope::CopyFrom(const Envelope& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:clickhouse_protolist.v1.Envelope)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Envelope::InternalSwap(Envelope* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.row_.InternalSwap(&other->_impl_.row_);
}

::google::protobuf::Metadata Envelope::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace clickhouse_protolist
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_clickhouse_5flist_2fv1_2fclickhouse_5fprotolist_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
