// Code generated by protoc-gen-validate
// source: xtcp_flat_record/v1/xtcp_flat_record.proto
// DO NOT EDIT!!!

#pragma once

#include <algorithm>
#include <string>
#include <sstream>
#include <unordered_set>
#include <vector>

#include "validate/validate.h"
#include "xtcp_flat_record/v1/xtcp_flat_record.pb.h"


namespace xtcp_flat_record {
namespace v1 {

using std::string;


extern bool Validate(const ::xtcp_flat_record::v1::Envelope& m, pgv::ValidationMsg* err);

extern bool Validate(const ::xtcp_flat_record::v1::XtcpFlatRecord& m, pgv::ValidationMsg* err);

extern bool Validate(const ::xtcp_flat_record::v1::FlatRecordsRequest& m, pgv::ValidationMsg* err);

extern bool Validate(const ::xtcp_flat_record::v1::FlatRecordsResponse& m, pgv::ValidationMsg* err);

extern bool Validate(const ::xtcp_flat_record::v1::PollFlatRecordsRequest& m, pgv::ValidationMsg* err);

extern bool Validate(const ::xtcp_flat_record::v1::PollFlatRecordsResponse& m, pgv::ValidationMsg* err);

extern bool Validate(const ::xtcp_flat_record::v1::Envelope_XtcpFlatRecord& m, pgv::ValidationMsg* err);


} // namespace
} // namespace


#define X_XTCP_FLAT_RECORD_V1_XTCP_FLAT_RECORD(X) \
X(::xtcp_flat_record::v1::Envelope) \
X(::xtcp_flat_record::v1::XtcpFlatRecord) \
X(::xtcp_flat_record::v1::FlatRecordsRequest) \
X(::xtcp_flat_record::v1::FlatRecordsResponse) \
X(::xtcp_flat_record::v1::PollFlatRecordsRequest) \
X(::xtcp_flat_record::v1::PollFlatRecordsResponse) \
X(::xtcp_flat_record::v1::Envelope_XtcpFlatRecord) \

